# General configuration --------------------------------------------------------

# Writeable directory where all the files will be stored (default: ./data)
# NANIT_DATA_DIR=/app/data

# Default value: info
# Allowed values: trace | debug | info | warn | error | fatal | panic
# NANIT_LOG_LEVEL=debug

# Session file (optional)
# Stores state between runs, useful for rapid development so that we don't get
# flagged by auth. servers for too many requests during application re-runs.
#
# Warning: The file contains sensitive information (auth tokens, etc.).
#  It is recommended to only use it during development.
# NANIT_SESSION_FILE=data/session.json

# Nanit credentials ------------------------------------------------------------

# Nanit user credentials (as entered during Nanit cam registration) 
NANIT_EMAIL=xxxx@xxxx.tld
NANIT_PASSWORD=xxxxxxxxxx

# Remote stream processing -----------------------------------------------------

# Enable remote stream processing (default: true)
# NANIT_REMOTE_STREAM_ENABLED=false

# Command for remote stream processing
# Use this to override default behaviour of publishing HLS stream
# You can use placeholders:
# - {sourceUrl} - replaced with URL of the remote stream
# - {babyUid} - replaced with UID of the Baby
#
# Default: "ffmpeg -i {sourceUrl} -codec copy -hls_time 1 -hls_wrap 10 -hls_flags delete_segments -hls_segment_filename {babyUid}-%02d.ts {babyUid}.m3u8"
# NANIT_REMOTE_STREAM_CMD="echo {sourceUrl}"

# Local stream processing ------------------------------------------------------

# Enable local stream push (default: false)
# NANIT_LOCAL_STREAM_ENABLED=true

# Sends cam a request to push its live feed directly to the RTMP server
# You can then restream it ie. with help of nginx-rtmp
# NANIT_LOCAL_STREAM_PUSH_TARGET=rtmp://192.168.3.234:1935/live

# HTTP server ------------------------------------------------------------------

# Serving files in {NANIT_DATA_DIR}/videos. It is necessary for HLS streaming.

# Enable HTTP server (default: true)
# NANIT_HTTP_ENABLED=false
